# Generated by Django 5.2.1 on 2025-05-09 15:53

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('planner', '0003_timersession'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StudySession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('productivity_score', models.PositiveSmallIntegerField(choices=[(1, 'Very Low'), (2, 'Low'), (3, 'Medium'), (4, 'High'), (5, 'Very High')], default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('distractions', models.PositiveIntegerField(default=0, help_text='Number of distractions during session')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_duration', models.PositiveIntegerField(default=25, help_text='Work duration in minutes', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(120)])),
                ('short_break_duration', models.PositiveIntegerField(default=5, help_text='Short break duration in minutes', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('long_break_duration', models.PositiveIntegerField(default=15, help_text='Long break duration in minutes', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(60)])),
                ('long_break_interval', models.PositiveIntegerField(default=4, help_text='Number of work sessions before long break', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('most_productive_time', models.CharField(choices=[('MORNING', 'Morning (5AM-12PM)'), ('AFTERNOON', 'Afternoon (12PM-5PM)'), ('EVENING', 'Evening (5PM-12AM)'), ('NIGHT', 'Night (12AM-5AM)')], default='MORNING', max_length=10)),
                ('enable_dark_mode', models.BooleanField(default=False)),
                ('enable_sounds', models.BooleanField(default=True)),
                ('daily_goal', models.PositiveIntegerField(default=120, help_text='Daily study goal in minutes', validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(600)])),
                ('weekly_goal', models.PositiveIntegerField(default=600, help_text='Weekly study goal in minutes', validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(3000)])),
            ],
            options={
                'verbose_name': 'User Settings',
                'verbose_name_plural': 'User Settings',
            },
        ),
        migrations.AlterModelOptions(
            name='task',
            options={'ordering': ['completed', '-priority', 'due_date']},
        ),
        migrations.AlterModelOptions(
            name='timersession',
            options={'ordering': ['-start_time']},
        ),
        migrations.AddField(
            model_name='timersession',
            name='notes',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='task',
            name='category',
            field=models.CharField(choices=[('STUDY', 'Study'), ('WORK', 'Work'), ('PERSONAL', 'Personal'), ('HEALTH', 'Health'), ('OTHER', 'Other')], default='STUDY', max_length=10),
        ),
        migrations.AlterField(
            model_name='task',
            name='estimated_duration',
            field=models.PositiveIntegerField(default=60, help_text='Estimated duration in minutes', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='task',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='timersession',
            name='session_type',
            field=models.CharField(choices=[('WORK', 'Work Session'), ('SHORT_BREAK', 'Short Break'), ('LONG_BREAK', 'Long Break')], max_length=15),
        ),
        migrations.AlterField(
            model_name='timersession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timer_sessions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['user', 'completed'], name='planner_tas_user_id_b0c3b7_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['priority'], name='planner_tas_priorit_2c0dcf_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['due_date'], name='planner_tas_due_dat_0e83de_idx'),
        ),
        migrations.AddIndex(
            model_name='timersession',
            index=models.Index(fields=['user', 'start_time'], name='planner_tim_user_id_81b971_idx'),
        ),
        migrations.AddIndex(
            model_name='timersession',
            index=models.Index(fields=['session_type'], name='planner_tim_session_710fa0_idx'),
        ),
        migrations.AddField(
            model_name='studysession',
            name='task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='study_sessions', to='planner.task'),
        ),
        migrations.AddField(
            model_name='studysession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_sessions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usersettings',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='studysession',
            index=models.Index(fields=['user', 'start_time'], name='planner_stu_user_id_8dbc0a_idx'),
        ),
        migrations.AddIndex(
            model_name='studysession',
            index=models.Index(fields=['productivity_score'], name='planner_stu_product_787bd9_idx'),
        ),
    ]
